services:
  api:
    build: api
    container_name: gabibbook-api
    environment:
      - MONGODB_URI=${MONGODB_URI}
      - API_PORT=${API_PORT}
      - JWT_SECRET=${JWT_SECRET}
      - MONGODB_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGODB_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - '3000:3000'
    depends_on:
      - db
    networks:
      api_net:
        ipv4_address: 172.16.1.5
      database_net:
        ipv4_address: 172.16.4.80

  frontend:
    container_name: gabibbook-frontend
    build: angular
    ports:
      - '80:80'
    depends_on:
      - api
    volumes:
      - ./frontend:/app
      - node-modules-frontend:/app/node_modules

  db:
    image: mongo
    container_name: gabibbook-db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    ports:
      - '27017:27017'
    networks:
      database_net:
        ipv4_address: 172.16.4.20

volumes:
  api-data:
    driver: local
  node-modules-api:
    driver: local
  node-modules-frontend:
    driver: local

networks:                
    api_net:
        ipam:
            driver: default
            config:
                - subnet: 172.16.1.0/24

    database_net:
        ipam:
            driver: default
            config: 
                - subnet: 172.16.4.0/24